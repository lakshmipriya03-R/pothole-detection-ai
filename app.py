import streamlit as st
from PIL import Image
from fpdf import FPDF
from datetime import datetime
import io

# Set page config
st.set_page_config(page_title="Pothole Detection AI", page_icon="üï≥Ô∏è", layout="wide")

# Title and description
st.title("üï≥Ô∏è Pothole Detection AI")
st.write("Upload an image to detect potholes and generate professional analysis report")

# PDF generation function (exactly like your sample)
def generate_professional_pdf(image, analysis_results):
    pdf = FPDF()
    
    # Page 1
    pdf.add_page()
    
    # Header
    pdf.set_font("Arial", 'B', 24)
    pdf.cell(0, 20, "Pothole Analysis Report", 0, 1, 'C')
    pdf.set_font("Arial", '', 12)
    pdf.cell(0, 10, f"Comprehensive Road Infrastructure Assessment | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", 0, 1, 'C')
    pdf.ln(10)
    
    # Processed Image section
    pdf.set_font("Arial", 'B', 16)
    pdf.cell(0, 10, "Processed Image", 0, 1)
    pdf.set_font("Arial", '', 12)
    pdf.cell(0, 10, "AI-processed image with pothole detections", 0, 1)
    pdf.ln(5)
    
    # Executive Summary
    pdf.set_font("Arial", 'B', 16)
    pdf.cell(0, 10, "Executive Summary", 0, 1)
    
    summary_data = [
        ("Total Potholes Detected:", f"**{analysis_results['total_potholes']}**"),
        ("Overall Risk Level:", f"**{analysis_results['risk_level']}**"),
        ("Total Damage Area:", f"**{analysis_results['total_area']} pixels¬≤**"),
        ("AI Model Confidence:", f"**{analysis_results['confidence']}% Accuracy**")
    ]
    
    pdf.set_font("Arial", '', 12)
    for label, value in summary_data:
        pdf.cell(90, 10, label, 0, 0)
        pdf.cell(0, 10, value, 0, 1)
    
    pdf.ln(10)
    
    # Detailed Analysis (add your 7 potholes here)
    pdf.set_font("Arial", 'B', 16)
    pdf.cell(0, 10, "Detailed Pothole Analysis", 0, 1)
    
    # Add detailed pothole analysis for all 7 potholes
    for i, pothole in enumerate(analysis_results['potholes'], 1):
        pdf.set_font("Arial", 'B', 14)
        pdf.cell(0, 10, f"Pothole #{i} - {pothole['risk_level']}", 0, 1)
        
        pdf.set_font("Arial", '', 12)
        details = [
            ("Detection Confidence:", f"{pothole['confidence']}%"),
            ("Dimensions:", f"{pothole['width']} √ó {pothole['height']} pixels"),
            ("Area Coverage:", f"{pothole['area']} pixels¬≤"),
            ("Severity Level:", f"{pothole['severity']}%"),
            ("Image Coordinates:", f"X:{pothole['x1']}-{pothole['x2']}, Y:{pothole['y1']}-{pothole['y2']}")
        ]
        
        for label, value in details:
            pdf.cell(60, 8, label, 0, 0)
            pdf.cell(0, 8, value, 0, 1)
        
        pdf.ln(3)
        pdf.multi_cell(0, 8, pothole['impact'])
        pdf.ln(3)
        pdf.multi_cell(0, 8, f"**Urgency:** {pothole['urgency']}\n**Cost Estimate:** {pothole['cost_estimate']}")
        pdf.ln(10)
    
    # Footer
    pdf.set_font("Arial", 'I', 10)
    pdf.cell(0, 10, "Generated by Advanced AI Pothole Detection System | Model Accuracy: 64.1% | ¬© 2025 RoadSafe AI", 0, 1, 'C')
    
    return pdf.output(dest='S').encode('latin1')

# Mock analysis data (replace with your actual model results)
def analyze_image(image):
    return {
        "total_potholes": 7,
        "risk_level": "EXTREME",
        "total_area": 11942,
        "confidence": 64.1,
        "potholes": [
            {
                "confidence": 92.24, "width": 102, "height": 24, "area": 2448, 
                "severity": 30, "x1": 274, "x2": 376, "y1": 168, "y2": 192,
                "risk_level": "LOW RISK",
                "impact": "Minor vehicle wear, Reduced ride quality, Maintenance suggested",
                "urgency": "SCHEDULED (Within 2 weeks)",
                "cost_estimate": "‚Çπ1,000 - ‚Çπ5,000"
            },
            # Add all 7 potholes with similar structure
            {
                "confidence": 89.98, "width": 74, "height": 29, "area": 2146,
                "severity": 30, "x1": 343, "x2": 417, "y1": 239, "y2": 268,
                "risk_level": "LOW RISK", 
                "impact": "Minor vehicle wear, Reduced ride quality, Maintenance suggested",
                "urgency": "SCHEDULED (Within 2 weeks)",
                "cost_estimate": "‚Çπ1,000 - ‚Çπ5,000"
            }
            # Add remaining 5 potholes...
        ]
    }

# Main app
uploaded_file = st.file_uploader("Choose an image...", type=['jpg', 'jpeg', 'png'])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    
    # Reduce image size for display
    max_size = (400, 400)
    image.thumbnail(max_size, Image.Resampling.LANCZOS)
    
    st.image(image, caption='Uploaded Image (Reduced size)', use_container_width=True)
    
    with st.spinner('Generating professional analysis report...'):
        results = analyze_image(image)
        pdf_bytes = generate_professional_pdf(image, results)
        
        st.success("‚úÖ Professional Analysis Completed!")
        
        st.download_button(
            label="üìÑ Download Full Professional Report PDF",
            data=pdf_bytes,
            file_name="pothole_analysis_report.pdf",
            mime="application/pdf",
            use_container_width=True
        )
